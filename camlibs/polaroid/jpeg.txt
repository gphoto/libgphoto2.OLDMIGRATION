This should help understand jpeg headers.
Warning: I don't understand the jpeg headers or jpegs that well!
Oh well, I will try to explain here anyway.

Jpeg markers in general:
------------
0xFF marker# lenth(2 bytes) data
length is the size of the information after the 0xFF XX

Quantization tables:
-------------------
0xFF 0xDB 0x00 length tables
Funny.....for what I have the data is all 0x01's.
I guess there is a precision number in there somewhere, but I don't know.
For what I have, both quantization tables are precision 0.
Precision 1 will not be used by us. We need precision 0.

Start of Frame 0:
----------------
0xFF 0xC0 0x00 length bits-per-pixel 0x00 height(2 bytes) width(2 bytes)
  #_of_components sets(1 or 3 of them)
A set would be component# v/h quantization table number.
The v/h is the vertical to horizontal compression ratio.
I forget what the "huh" is.
I misplaced some info I had on the components here.
There are a couple of formats that the data could be in.
The 3 component ones are YCbCr and CMY.
The 4 component ones are YCbCrK and CMYK.
The #_of_components is set to 3 or 4 accordingly.
The component# can be something like 0 through 5
The component# would refer to Y, Cb, Cr, C, M, or K
I need to sift through my email to find what number is for what.

Huffman tables:
--------------
0xFF 0xC4 0x00 length ACorDC bits(16 bytes) Huffman_values
length is the size of that huffman table (you don't count the FFCO)
Repeat until length is exhausted (usually 4 Huffman tables):
	If ACorDC>0x10 it is an AC table, otherwise, it is a DC table
	The length of the Huffman_values is the sum of the previous 16 bytes

Ending piece of header (I have no clue what to call it):
-------------------------------------------------------
0xFF 0xDA length(2 bytes) #_of_components(1 byte) sets Ss Se Ah Al
Ss and Se, I guess are each one byte.
I guess Ah and Al are one byte total.
The sets are: component#(1 byte) DC+ACtable#'s
For DC+ACtable#'s, the high nibble is DC table# and the low byte is AC table#






